worker_processes 1;

events { worker_connections 1024; }

http {

    server_names_hash_bucket_size 128;
    sendfile on;

    upstream eae {
        server 10.200.10.1:8081;
    }

    upstream platform {
        server 10.200.10.1:3333;
    }

    upstream network_explorer {
        server 10.200.10.1:3334;
    }

    upstream brokers_ws {
        server 10.200.10.1:8690;
        server 10.200.10.1:8790;
    }

    upstream brokers_http {
        server 10.200.10.1:8691;
        server 10.200.10.1:8791;
    }

    upstream storage_http {
        server 10.200.10.1:8891;
    }

    upstream mainchain_rpc_http {
        server 10.200.10.1:8545;
    }

    upstream mainchain_rpc_ws {
        server 10.200.10.1:8450;
    }

    upstream sidechain_rpc_http {
        server 10.200.10.1:8546;
    }

    upstream sidechain_rpc_ws {
        server 10.200.10.1:8451;
    }

    server {
        proxy_connect_timeout 10s;

        listen 80;

        # UNCOMMENT FOR SSL
        # -----------------

        # listen 443 ssl;
        # ssl_certificate /etc/nginx/mounted-certs/bundle.crt;
        # ssl_certificate_key /etc/nginx/mounted-certs/secret.key;
        # if ($scheme = http) {
        #     return 301 https://$host$request_uri;
        # }

        # Enables all versions of TLS, but not SSLv2 or 3 which are weak and now deprecated.
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        # Disables all weak ciphers
        ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

        # Websocket endpoint
        location /api/v1/ws {
            add_header X-debug "/api/v1/ws";
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_pass http://brokers_ws;
            proxy_read_timeout 240s;
        }

        # Data REST endpoints
        location ~ /api/v1/streams/(.*)/(data|metadata/partitions/.*|storage/partitions/.*|data/partitions/.*)$ {
            add_header X-debug "/api/v1/streams";
            proxy_pass http://storage_http;
            proxy_read_timeout 240s;
        }

        # Data Volume endpoint
        location /api/v1/volume {
            add_header X-debug "/api/v1/volume";
            proxy_pass http://brokers_http;
            proxy_read_timeout 240s;
        }

        # Network explorer
        location /network-explorer/ {
            proxy_pass http://network_explorer$request_uri;
        }

        ### API ENDPOINTS PROXIED TO ENGINE-AND-EDITOR ###

        location /api {
            # Disable uri decoding, from https://serverfault.com/questions/459369/disabling-url-decoding-in-nginx-proxy
            rewrite  ^  $request_uri;            # get original URI
            rewrite  ^/api(/.*)  /streamr-core/api$1  break;  # drop /api, put /streamr-core/api
            return 400;   # if the second rewrite won't match

            add_header X-debug "/api";

            # for csv uploads
            client_max_body_size 512m;
            proxy_read_timeout 600;

            proxy_buffers 8 32k;

            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Request-URI $request_uri;

            proxy_pass http://eae$uri;
        }

        ### Utility paths proxied to the Ethereum nodes in the docker stack. Useful if SSL is terminated at nginx ###

        location /mainchain-rpc/http/ {
            proxy_pass http://mainchain_rpc_http/;
        }

        location /mainchain-rpc/ws/ {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_pass http://mainchain_rpc_ws/;
        }

        location /sidechain-rpc/http/ {
            proxy_pass http://sidechain_rpc_http/;
        }

        location /sidechain-rpc/ws/ {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_pass http://sidechain_rpc_ws/;
        }

        # Here for backwards compatibility.
        # Can be removed once the apps reference the api via /api instead of /streamr-core/api.
        # For now, support both options.
        location /streamr-core/ {
            add_header X-debug "/streamr-core";
            proxy_pass         http://eae/streamr-core/;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

        # Proxy everything else to the Core app
        location / {
            add_header X-debug "/";
            proxy_pass         http://platform;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

    }
}

