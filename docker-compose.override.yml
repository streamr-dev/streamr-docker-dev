version: "3"
services:
    nginx:
        container_name: streamr_nginx_reverse
        image: nginx:1.14-alpine
        restart: on-failure
        ports:
          - "80:80"
        volumes:
          - ./custom-nginx-reverse-proxy.conf:/etc/nginx/nginx.conf:ro
    broker:
        container_name: streamr_dev_broker
        image: streamr/cloud-broker:dev
        restart: on-failure
        depends_on:
            - init_keyspace
        links:
            - cassandra
            - kafka
            - redis
    data-api:
        container_name: streamr_dev_data-api
        image: streamr/data-api:dev
        restart: on-failure
        ports:
            - "8890:8890"
        depends_on:
            - init_keyspace
        links:
            - cassandra
            - kafka
            - redis
            - zookeeper
        environment:
            STREAMR_URL: http://10.200.10.1:8081/streamr-core
    twitter-bitcoin:
          container_name: streamr_dev_twitter-bitcoin
          image: streamr/twitter-bitcoin
          restart: on-failure
          links:
              - data-api
    engine-and-editor:
        container_name: streamr_dev_engine-and-editor
        image: streamr/engine-and-editor:dev
        ports:
            - "8081:8081"
        depends_on:
            - init_keyspace
        links:
            - mysql
            - cassandra
            - kafka
            - redis
            - zookeeper
            - broker
            - streamr-web3
        environment:
            AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
            AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
    ethereum-watcher:
        container_name: streamr_dev_ethereum_watcher
        image: streamr/ethereum-watcher
        restart: on-failure
        depends_on:
            - engine-and-editor
        links:
            - engine-and-editor
        environment:
            STREAMR_API_URL: http://engine-and-editor:8081/streamr-core/api/v1
            METRICS: "false"
        volumes:
            - ./data/ethereum-watcher/:/app/logs
    streamr-web3:
        container_name: streamr_dev_streamr_web3
        image: streamr/streamr-web3:dev
        ports:
            - "3001:3001"
